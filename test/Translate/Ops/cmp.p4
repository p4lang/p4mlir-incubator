// RUN: p4mlir-translate --typeinference-only %s | FileCheck %s

// NOTE: Assertions have been autogenerated by utils/generate-test-checks.py

// CHECK-LABEL:   p4hir.func action @cmp()
// CHECK:         %[[VAL_0:.*]] = p4hir.variable ["res"] : <!p4hir.bool>
// CHECK:         %[[VAL_1:.*]] = p4hir.const #int1_b10i
// CHECK:         %[[VAL_2:.*]] = p4hir.cast(%[[VAL_1]] : !b10i) : !b10i
// CHECK:         %[[VAL_3:.*]] = p4hir.variable ["lhs", init] : <!b10i>
// CHECK:         p4hir.assign %[[VAL_2]], %[[VAL_3]] : <!b10i>
// CHECK:         %[[VAL_4:.*]] = p4hir.const #int2_b10i
// CHECK:         %[[VAL_5:.*]] = p4hir.cast(%[[VAL_4]] : !b10i) : !b10i
// CHECK:         %[[VAL_6:.*]] = p4hir.variable ["rhs", init] : <!b10i>
// CHECK:         p4hir.assign %[[VAL_5]], %[[VAL_6]] : <!b10i>
// CHECK:         %[[VAL_7:.*]] = p4hir.read %[[VAL_3]] : <!b10i>
// CHECK:         %[[VAL_8:.*]] = p4hir.read %[[VAL_6]] : <!b10i>
// CHECK:         %[[VAL_9:.*]] = p4hir.cmp(eq, %[[VAL_7]] : !b10i, %[[VAL_8]] : !b10i)
// CHECK:         p4hir.assign %[[VAL_9]], %[[VAL_0]] : <!p4hir.bool>
// CHECK:         %[[VAL_10:.*]] = p4hir.read %[[VAL_3]] : <!b10i>
// CHECK:         %[[VAL_11:.*]] = p4hir.read %[[VAL_6]] : <!b10i>
// CHECK:         %[[VAL_12:.*]] = p4hir.cmp(ne, %[[VAL_10]] : !b10i, %[[VAL_11]] : !b10i)
// CHECK:         p4hir.assign %[[VAL_12]], %[[VAL_0]] : <!p4hir.bool>
// CHECK:         %[[VAL_13:.*]] = p4hir.read %[[VAL_3]] : <!b10i>
// CHECK:         %[[VAL_14:.*]] = p4hir.read %[[VAL_6]] : <!b10i>
// CHECK:         %[[VAL_15:.*]] = p4hir.cmp(lt, %[[VAL_13]] : !b10i, %[[VAL_14]] : !b10i)
// CHECK:         p4hir.assign %[[VAL_15]], %[[VAL_0]] : <!p4hir.bool>
// CHECK:         %[[VAL_16:.*]] = p4hir.read %[[VAL_3]] : <!b10i>
// CHECK:         %[[VAL_17:.*]] = p4hir.read %[[VAL_6]] : <!b10i>
// CHECK:         %[[VAL_18:.*]] = p4hir.cmp(gt, %[[VAL_16]] : !b10i, %[[VAL_17]] : !b10i)
// CHECK:         p4hir.assign %[[VAL_18]], %[[VAL_0]] : <!p4hir.bool>
// CHECK:         %[[VAL_19:.*]] = p4hir.read %[[VAL_3]] : <!b10i>
// CHECK:         %[[VAL_20:.*]] = p4hir.read %[[VAL_6]] : <!b10i>
// CHECK:         %[[VAL_21:.*]] = p4hir.cmp(le, %[[VAL_19]] : !b10i, %[[VAL_20]] : !b10i)
// CHECK:         p4hir.assign %[[VAL_21]], %[[VAL_0]] : <!p4hir.bool>
// CHECK:         %[[VAL_22:.*]] = p4hir.read %[[VAL_3]] : <!b10i>
// CHECK:         %[[VAL_23:.*]] = p4hir.read %[[VAL_6]] : <!b10i>
// CHECK:         %[[VAL_24:.*]] = p4hir.cmp(ge, %[[VAL_22]] : !b10i, %[[VAL_23]] : !b10i)
// CHECK:         p4hir.assign %[[VAL_24]], %[[VAL_0]] : <!p4hir.bool>

action cmp() {
    bool res;

    bit<10> lhs = 1;
    bit<10> rhs = 2;

    res = lhs == rhs;
    res = lhs != rhs;
    res = lhs < rhs;
    res = lhs > rhs;
    res = lhs <= rhs;
    res = lhs >= rhs;
}
