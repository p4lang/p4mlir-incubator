warning: loc("test/Translate/Ops/extern.p4":75:15):  Unhandled parser statement: %c0_i32i = p4hir.const #p4hir.int<0> : !p4hir.int<32>
note: loc("test/Translate/Ops/extern.p4":75:15): see current operation: %c0_i32i = p4hir.const #p4hir.int<0> : !p4hir.int<32>
  73 |       // CHECK: p4hir.call_method @Y::@method<[!b8i]> (%[[y]], %{{.*}}) : !Y, (!b8i) -> ()
  74 |       y.method(8w0);
  75 |       // CHECK: p4hir.call_method @ext::@method<[!b8i]> (%[[ex]], %{{.*}}, %{{.*}}) : !ext_b16i, (!b16i, !b8i) -> ()
     |               ^
  76 |       ex.method(0, 8w0);
  77 |       // CHECK: p4hir.call_method @ext2::@method<[!b12i]> (%[[ey]], %{{.*}}) : !ext2_b16i_void, (!b12i) -> !b16i
warning: loc("test/Translate/Ops/extern.p4":75:21):  Unhandled parser statement: %x = p4hir.instantiate @X(%c0_i32i) as "x" : (!p4hir.int<32>) -> !p4hir.extern<"X"<!p4hir.int<32>>>
note: loc("test/Translate/Ops/extern.p4":75:21): see current operation: %x = p4hir.instantiate @X(%c0_i32i) as "x" : (!p4hir.int<32>) -> !p4hir.extern<"X"<!p4hir.int<32>>>
  73 |       // CHECK: p4hir.call_method @Y::@method<[!b8i]> (%[[y]], %{{.*}}) : !Y, (!b8i) -> ()
  74 |       y.method(8w0);
  75 |       // CHECK: p4hir.call_method @ext::@method<[!b8i]> (%[[ex]], %{{.*}}, %{{.*}}) : !ext_b16i, (!b16i, !b8i) -> ()
     |                     ^
  76 |       ex.method(0, 8w0);
  77 |       // CHECK: p4hir.call_method @ext2::@method<[!b12i]> (%[[ey]], %{{.*}}) : !ext2_b16i_void, (!b12i) -> !b16i
warning: loc("test/Translate/Ops/extern.p4":78:8):  Unhandled parser statement: %y = p4hir.instantiate @Y() as "y" : () -> !p4hir.extern<"Y">
note: loc("test/Translate/Ops/extern.p4":78:8): see current operation: %y = p4hir.instantiate @Y() as "y" : () -> !p4hir.extern<"Y">
  76 |       ex.method(0, 8w0);
  77 |       // CHECK: p4hir.call_method @ext2::@method<[!b12i]> (%[[ey]], %{{.*}}) : !ext2_b16i_void, (!b12i) -> !b16i
  78 |       // CHECK: p4hir.call_method @ext2::@method<[!b8i]> (%[[ey]], %{{.*}}, %{{.*}}) : !ext2_b16i_void, (!b16i, !b8i) -> ()
     |        ^
  79 |       ey.method(ey.method(12w1), 8w0);
  80 |       transition accept;
warning: loc("test/Translate/Ops/extern.p4":82:17):  Unhandled parser statement: %c0_b16i = p4hir.const #p4hir.int<0> : !p4hir.bit<16>
note: loc("test/Translate/Ops/extern.p4":82:17): see current operation: %c0_b16i = p4hir.const #p4hir.int<0> : !p4hir.bit<16>
  80 |       transition accept;
  81 |     }
  82 | }
     |                 ^
  83 | // CHECK-LABEL: p4hir.parser @Inner
  84 | parser Inner(my_counter_t counter_set) {
warning: loc("test/Translate/Ops/extern.p4":82:23):  Unhandled parser statement: %ex = p4hir.instantiate @ext(%c0_b16i) as "ex" : (!p4hir.bit<16>) -> !p4hir.extern<"ext"<!p4hir.bit<16>>>
note: loc("test/Translate/Ops/extern.p4":82:23): see current operation: %ex = p4hir.instantiate @ext(%c0_b16i) as "ex" : (!p4hir.bit<16>) -> !p4hir.extern<"ext"<!p4hir.bit<16>>>
  80 |       transition accept;
  81 |     }
  82 | }
     |                       ^
  83 | // CHECK-LABEL: p4hir.parser @Inner
  84 | parser Inner(my_counter_t counter_set) {
warning: loc("test/Translate/Ops/extern.p4":85:24):  Unhandled parser statement: %c0_b16i_0 = p4hir.const #p4hir.int<0> : !p4hir.bit<16>
note: loc("test/Translate/Ops/extern.p4":85:24): see current operation: %c0_b16i_0 = p4hir.const #p4hir.int<0> : !p4hir.bit<16>
  83 | // CHECK-LABEL: p4hir.parser @Inner
  84 | parser Inner(my_counter_t counter_set) {
  85 |     state start {
     |                        ^
  86 |       // CHECK: p4hir.call_method @MyCounter::@count (%arg0, %{{.*}}) : !MyCounter_b10i, (!b10i) -> ()
  87 |       counter_set.count(10w42);
warning: loc("test/Translate/Ops/extern.p4":85:30):  Unhandled parser statement: %ey = p4hir.instantiate @ext2(%c0_b16i_0) as "ey" : (!p4hir.bit<16>) -> !p4hir.extern<"ext2"<!p4hir.bit<16>, !p4hir.void>>
note: loc("test/Translate/Ops/extern.p4":85:30): see current operation: %ey = p4hir.instantiate @ext2(%c0_b16i_0) as "ey" : (!p4hir.bit<16>) -> !p4hir.extern<"ext2"<!p4hir.bit<16>, !p4hir.void>>
  83 | // CHECK-LABEL: p4hir.parser @Inner
  84 | parser Inner(my_counter_t counter_set) {
  85 |     state start {
     |                              ^
  86 |       // CHECK: p4hir.call_method @MyCounter::@count (%arg0, %{{.*}}) : !MyCounter_b10i, (!b10i) -> ()
  87 |       counter_set.count(10w42);
warning: loc("test/Translate/Ops/extern.p4":117:17):  Unhandled parser statement: %c1024 = p4hir.const #p4hir.int<1024> : !p4hir.infint
note: loc("test/Translate/Ops/extern.p4":117:17): see current operation: %c1024 = p4hir.const #p4hir.int<1024> : !p4hir.infint
 102 | }
warning: loc("test/Translate/Ops/extern.p4":117:17):  Unhandled parser statement: %cast = p4hir.cast(%c1024 : !p4hir.infint) : !p4hir.bit<32>
note: loc("test/Translate/Ops/extern.p4":117:17): see current operation: %cast = p4hir.cast(%c1024 : !p4hir.infint) : !p4hir.bit<32>
 102 | }
warning: loc("test/Translate/Ops/extern.p4":117:23):  Unhandled parser statement: %counter_set = p4hir.instantiate @MyCounter(%cast) as "counter_set" : (!p4hir.bit<32>) -> !p4hir.extern<"MyCounter"<!p4hir.bit<10>>>
note: loc("test/Translate/Ops/extern.p4":117:23): see current operation: %counter_set = p4hir.instantiate @MyCounter(%cast) as "counter_set" : (!p4hir.bit<32>) -> !p4hir.extern<"MyCounter"<!p4hir.bit<10>>>
 102 | }
warning: loc("test/Translate/Ops/extern.p4":119:12):  Unhandled parser statement: %inner = p4hir.instantiate @Inner() as "inner" : () -> !p4hir.parser<"Inner", (!p4hir.extern<"MyCounter"<!p4hir.bit<10>>>)>
note: loc("test/Translate/Ops/extern.p4":119:12): see current operation: %inner = p4hir.instantiate @Inner() as "inner" : () -> !p4hir.parser<"Inner", (!p4hir.extern<"MyCounter"<!p4hir.bit<10>>>)>
 102 | }
warning: loc("test/Translate/Ops/extern.p4":123:8):  Unhandled parser state statement: p4hir.apply %inner(%counter_set) : !p4hir.parser<"Inner", (!p4hir.extern<"MyCounter"<!p4hir.bit<10>>>)>
note: loc("test/Translate/Ops/extern.p4":123:8): see current operation: p4hir.apply %inner(%counter_set) : !p4hir.parser<"Inner", (!p4hir.extern<"MyCounter"<!p4hir.bit<10>>>)>
 102 | }
extern Crc16 {
    void hash(in U input_data);
    U id(in U x);
}

extern ext {
    void ext(H v);
    void method(H h, T t);
}

extern ext2 {
    void ext2(H v);
    V method(in H h, in T t);
    H method(in T t);
}

extern X {
    void X(T t);
    T method(T t);
}

extern Y {
    void Y();
    void method(T t);
}

extern MyCounter {
    void MyCounter(bit<32> size);
    void count(in I index);
}

parser p() {
    state start {
        transition accept;
    }
}
parser Inner(MyCounter<bit<10>> counter_set) {
    state start {
        transition accept;
    }
}
parser Test() {
    state start {
        transition accept;
    }
}
