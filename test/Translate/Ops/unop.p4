// RUN: p4mlir-translate --typeinference-only %s | FileCheck %s

// NOTE: Assertions have been autogenerated by utils/generate-test-checks.py

// CHECK-LABEL:   p4hir.func action @foo()
// CHECK:         %[[VAL_0:.*]] = p4hir.const #true
// CHECK:         %[[VAL_1:.*]] = p4hir.variable ["b0", init] : <!p4hir.bool>
// CHECK:         p4hir.assign %[[VAL_0]], %[[VAL_1]] : <!p4hir.bool>
// CHECK:         %[[VAL_2:.*]] = p4hir.const #int255_i32i
// CHECK:         %[[VAL_3:.*]] = p4hir.variable ["b2", init] : <!i32i>
// CHECK:         p4hir.assign %[[VAL_2]], %[[VAL_3]] : <!i32i>
// CHECK:         %[[VAL_4:.*]] = p4hir.read %[[VAL_3]] : <!i32i>
// CHECK:         %[[VAL_5:.*]] = p4hir.unary(minus, %[[VAL_4]]) : !i32i
// CHECK:         %[[VAL_6:.*]] = p4hir.variable ["b3", init] : <!i32i>
// CHECK:         p4hir.assign %[[VAL_5]], %[[VAL_6]] : <!i32i>
// CHECK:         %[[VAL_7:.*]] = p4hir.read %[[VAL_3]] : <!i32i>
// CHECK:         %[[VAL_8:.*]] = p4hir.unary(cmpl, %[[VAL_7]]) : !i32i
// CHECK:         %[[VAL_9:.*]] = p4hir.variable ["b4", init] : <!i32i>
// CHECK:         p4hir.assign %[[VAL_8]], %[[VAL_9]] : <!i32i>
// CHECK:         %[[VAL_10:.*]] = p4hir.read %[[VAL_1]] : <!p4hir.bool>
// CHECK:         %[[VAL_11:.*]] = p4hir.unary(not, %[[VAL_10]]) : !p4hir.bool
// CHECK:         %[[VAL_12:.*]] = p4hir.variable ["b5", init] : <!p4hir.bool>
// CHECK:         p4hir.assign %[[VAL_11]], %[[VAL_12]] : <!p4hir.bool>
// CHECK:         %[[VAL_13:.*]] = p4hir.read %[[VAL_3]] : <!i32i>
// CHECK:         %[[VAL_14:.*]] = p4hir.unary(plus, %[[VAL_13]]) : !i32i
// CHECK:         %[[VAL_15:.*]] = p4hir.variable ["b6", init] : <!i32i>
// CHECK:         p4hir.assign %[[VAL_14]], %[[VAL_15]] : <!i32i>

action foo() {
  bool    b0 = true;
  int<32> b2 = 32s0xFF;
  int<32> b3 = -b2;
  int<32> b4 = ~b2;
  bool    b5 = !b0;
  int<32> b6 = +b2;
}
