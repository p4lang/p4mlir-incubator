struct t {
    bool hit;
    bool miss;
    action_enum action_run;
}
control ctrl() {
    action e() {
        exit;
        return;
    }
    table t {
        actions = {
            e;
        }
        default_action = e();
    }
    apply {
        bit<32> a;
        bit<32> b;
        bit<32> c;

        a = (bit<32>)(32w0);
        b = (bit<32>)(32w1);
        c = (bit<32>)(32w2);
        t.apply();
        if (t.apply().hit) {
            b = (bit<32>)(32w2);
            t.apply();
            c = (bit<32>)(32w3);
            c = (bit<32>)(32w5);
        }
         else {
            b = (bit<32>)(32w3);
            t.apply();
            c = (bit<32>)(32w4);
            exit;
        }
    }
}
control noop();
package p(noop _n);
p(ctrl()) main;

