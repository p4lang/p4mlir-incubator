// RUN: p4mlir-translate --typeinference-only %s | FileCheck %s
// RUN: p4mlir-translate --typeinference-only --no-dump --Wdisable --dump-exported-p4 %s | diff -u - %s.ref
// RUN: p4mlir-translate --typeinference-only --no-dump --Wdisable --dump-exported-p4 %s | p4test -

// NOTE: Assertions have been autogenerated by utils/generate-test-checks.py

action concat_bit5_and_bit5() {
    bit<5> lhs = 1;
    bit<5> rhs = 2;
    bit<10> r = lhs ++ rhs;
}

action concat_bit5_and_bit10() {
    bit<5> lhs = 1;
    bit<10> rhs = 2;
    bit<15> result = lhs ++ rhs;
}

action concat_int5_and_int5() {
    int<5> lhs = 1;
    int<5> rhs = 2;
    int<10> result = lhs ++ rhs;
}

action concat_int5_and_int10() {
    int<5> lhs = 1;
    int<10> rhs = 2;
    int<15> result = lhs ++ rhs;
}

action concat_bit5_and_int5() {
    bit<5> lhs = 1;
    int<5> rhs = 2;
    bit<10> result = lhs ++ rhs;
}

action concat_bit5_and_int10() {
    bit<5> lhs = 1;
    int<10> rhs = 2;
    bit<15> result = lhs ++ rhs;
}

action concat_int5_and_bit5() {
    int<5> lhs = 1;
    bit<5> rhs = 2;
    int<10> result = lhs ++ rhs;
}

action concat_int5_and_bit10() {
    int<5> lhs = 1;
    bit<10> rhs = 2;
    int<15> result = lhs ++ rhs;
}

// CHECK: #[[$ATTR_0:.+]] = #p4hir.int<1> : !b5i
// CHECK: #[[$ATTR_1:.+]] = #p4hir.int<1> : !i5i
// CHECK: #[[$ATTR_2:.+]] = #p4hir.int<2> : !b10i
// CHECK: #[[$ATTR_3:.+]] = #p4hir.int<2> : !b5i
// CHECK: #[[$ATTR_4:.+]] = #p4hir.int<2> : !i10i
// CHECK: #[[$ATTR_5:.+]] = #p4hir.int<2> : !i5i

// CHECK-LABEL:   p4hir.func action @concat_bit5_and_bit5() {
// CHECK:           %[[VAL_0:.*]] = p4hir.const #[[$ATTR_0]]
// CHECK:           %[[VAL_1:.*]] = p4hir.cast(%[[VAL_0]] : !b5i) : !b5i
// CHECK:           %[[VAL_2:.*]] = p4hir.variable ["lhs", init] : <!b5i>
// CHECK:           p4hir.assign %[[VAL_1]], %[[VAL_2]] : <!b5i>
// CHECK:           %[[VAL_3:.*]] = p4hir.const #[[$ATTR_3]]
// CHECK:           %[[VAL_4:.*]] = p4hir.cast(%[[VAL_3]] : !b5i) : !b5i
// CHECK:           %[[VAL_5:.*]] = p4hir.variable ["rhs", init] : <!b5i>
// CHECK:           p4hir.assign %[[VAL_4]], %[[VAL_5]] : <!b5i>
// CHECK:           %[[VAL_6:.*]] = p4hir.read %[[VAL_2]] : <!b5i>
// CHECK:           %[[VAL_7:.*]] = p4hir.read %[[VAL_5]] : <!b5i>
// CHECK:           %[[VAL_8:.*]] = p4hir.concat(%[[VAL_6]] : !b5i, %[[VAL_7]] : !b5i) : !b10i
// CHECK:           %[[VAL_9:.*]] = p4hir.variable ["r", init] : <!b10i>
// CHECK:           p4hir.assign %[[VAL_8]], %[[VAL_9]] : <!b10i>
// CHECK:           p4hir.return
// CHECK:         }

// CHECK-LABEL:   p4hir.func action @concat_bit5_and_bit10() {
// CHECK:           %[[VAL_0:.*]] = p4hir.const #[[$ATTR_0]]
// CHECK:           %[[VAL_1:.*]] = p4hir.cast(%[[VAL_0]] : !b5i) : !b5i
// CHECK:           %[[VAL_2:.*]] = p4hir.variable ["lhs", init] : <!b5i>
// CHECK:           p4hir.assign %[[VAL_1]], %[[VAL_2]] : <!b5i>
// CHECK:           %[[VAL_3:.*]] = p4hir.const #[[$ATTR_2]]
// CHECK:           %[[VAL_4:.*]] = p4hir.cast(%[[VAL_3]] : !b10i) : !b10i
// CHECK:           %[[VAL_5:.*]] = p4hir.variable ["rhs", init] : <!b10i>
// CHECK:           p4hir.assign %[[VAL_4]], %[[VAL_5]] : <!b10i>
// CHECK:           %[[VAL_6:.*]] = p4hir.read %[[VAL_2]] : <!b5i>
// CHECK:           %[[VAL_7:.*]] = p4hir.read %[[VAL_5]] : <!b10i>
// CHECK:           %[[VAL_8:.*]] = p4hir.concat(%[[VAL_6]] : !b5i, %[[VAL_7]] : !b10i) : !b15i
// CHECK:           %[[VAL_9:.*]] = p4hir.variable ["result", init] : <!b15i>
// CHECK:           p4hir.assign %[[VAL_8]], %[[VAL_9]] : <!b15i>
// CHECK:           p4hir.return
// CHECK:         }

// CHECK-LABEL:   p4hir.func action @concat_int5_and_int5() {
// CHECK:           %[[VAL_0:.*]] = p4hir.const #[[$ATTR_1]]
// CHECK:           %[[VAL_1:.*]] = p4hir.cast(%[[VAL_0]] : !i5i) : !i5i
// CHECK:           %[[VAL_2:.*]] = p4hir.variable ["lhs", init] : <!i5i>
// CHECK:           p4hir.assign %[[VAL_1]], %[[VAL_2]] : <!i5i>
// CHECK:           %[[VAL_3:.*]] = p4hir.const #[[$ATTR_5]]
// CHECK:           %[[VAL_4:.*]] = p4hir.cast(%[[VAL_3]] : !i5i) : !i5i
// CHECK:           %[[VAL_5:.*]] = p4hir.variable ["rhs", init] : <!i5i>
// CHECK:           p4hir.assign %[[VAL_4]], %[[VAL_5]] : <!i5i>
// CHECK:           %[[VAL_6:.*]] = p4hir.read %[[VAL_2]] : <!i5i>
// CHECK:           %[[VAL_7:.*]] = p4hir.read %[[VAL_5]] : <!i5i>
// CHECK:           %[[VAL_8:.*]] = p4hir.concat(%[[VAL_6]] : !i5i, %[[VAL_7]] : !i5i) : !i10i
// CHECK:           %[[VAL_9:.*]] = p4hir.variable ["result", init] : <!i10i>
// CHECK:           p4hir.assign %[[VAL_8]], %[[VAL_9]] : <!i10i>
// CHECK:           p4hir.return
// CHECK:         }

// CHECK-LABEL:   p4hir.func action @concat_int5_and_int10() {
// CHECK:           %[[VAL_0:.*]] = p4hir.const #[[$ATTR_1]]
// CHECK:           %[[VAL_1:.*]] = p4hir.cast(%[[VAL_0]] : !i5i) : !i5i
// CHECK:           %[[VAL_2:.*]] = p4hir.variable ["lhs", init] : <!i5i>
// CHECK:           p4hir.assign %[[VAL_1]], %[[VAL_2]] : <!i5i>
// CHECK:           %[[VAL_3:.*]] = p4hir.const #[[$ATTR_4]]
// CHECK:           %[[VAL_4:.*]] = p4hir.cast(%[[VAL_3]] : !i10i) : !i10i
// CHECK:           %[[VAL_5:.*]] = p4hir.variable ["rhs", init] : <!i10i>
// CHECK:           p4hir.assign %[[VAL_4]], %[[VAL_5]] : <!i10i>
// CHECK:           %[[VAL_6:.*]] = p4hir.read %[[VAL_2]] : <!i5i>
// CHECK:           %[[VAL_7:.*]] = p4hir.read %[[VAL_5]] : <!i10i>
// CHECK:           %[[VAL_8:.*]] = p4hir.concat(%[[VAL_6]] : !i5i, %[[VAL_7]] : !i10i) : !i15i
// CHECK:           %[[VAL_9:.*]] = p4hir.variable ["result", init] : <!i15i>
// CHECK:           p4hir.assign %[[VAL_8]], %[[VAL_9]] : <!i15i>
// CHECK:           p4hir.return
// CHECK:         }

// CHECK-LABEL:   p4hir.func action @concat_bit5_and_int5() {
// CHECK:           %[[VAL_0:.*]] = p4hir.const #[[$ATTR_0]]
// CHECK:           %[[VAL_1:.*]] = p4hir.cast(%[[VAL_0]] : !b5i) : !b5i
// CHECK:           %[[VAL_2:.*]] = p4hir.variable ["lhs", init] : <!b5i>
// CHECK:           p4hir.assign %[[VAL_1]], %[[VAL_2]] : <!b5i>
// CHECK:           %[[VAL_3:.*]] = p4hir.const #[[$ATTR_5]]
// CHECK:           %[[VAL_4:.*]] = p4hir.cast(%[[VAL_3]] : !i5i) : !i5i
// CHECK:           %[[VAL_5:.*]] = p4hir.variable ["rhs", init] : <!i5i>
// CHECK:           p4hir.assign %[[VAL_4]], %[[VAL_5]] : <!i5i>
// CHECK:           %[[VAL_6:.*]] = p4hir.read %[[VAL_2]] : <!b5i>
// CHECK:           %[[VAL_7:.*]] = p4hir.read %[[VAL_5]] : <!i5i>
// CHECK:           %[[VAL_8:.*]] = p4hir.concat(%[[VAL_6]] : !b5i, %[[VAL_7]] : !i5i) : !b10i
// CHECK:           %[[VAL_9:.*]] = p4hir.variable ["result", init] : <!b10i>
// CHECK:           p4hir.assign %[[VAL_8]], %[[VAL_9]] : <!b10i>
// CHECK:           p4hir.return
// CHECK:         }

// CHECK-LABEL:   p4hir.func action @concat_bit5_and_int10() {
// CHECK:           %[[VAL_0:.*]] = p4hir.const #[[$ATTR_0]]
// CHECK:           %[[VAL_1:.*]] = p4hir.cast(%[[VAL_0]] : !b5i) : !b5i
// CHECK:           %[[VAL_2:.*]] = p4hir.variable ["lhs", init] : <!b5i>
// CHECK:           p4hir.assign %[[VAL_1]], %[[VAL_2]] : <!b5i>
// CHECK:           %[[VAL_3:.*]] = p4hir.const #[[$ATTR_4]]
// CHECK:           %[[VAL_4:.*]] = p4hir.cast(%[[VAL_3]] : !i10i) : !i10i
// CHECK:           %[[VAL_5:.*]] = p4hir.variable ["rhs", init] : <!i10i>
// CHECK:           p4hir.assign %[[VAL_4]], %[[VAL_5]] : <!i10i>
// CHECK:           %[[VAL_6:.*]] = p4hir.read %[[VAL_2]] : <!b5i>
// CHECK:           %[[VAL_7:.*]] = p4hir.read %[[VAL_5]] : <!i10i>
// CHECK:           %[[VAL_8:.*]] = p4hir.concat(%[[VAL_6]] : !b5i, %[[VAL_7]] : !i10i) : !b15i
// CHECK:           %[[VAL_9:.*]] = p4hir.variable ["result", init] : <!b15i>
// CHECK:           p4hir.assign %[[VAL_8]], %[[VAL_9]] : <!b15i>
// CHECK:           p4hir.return
// CHECK:         }

// CHECK-LABEL:   p4hir.func action @concat_int5_and_bit5() {
// CHECK:           %[[VAL_0:.*]] = p4hir.const #[[$ATTR_1]]
// CHECK:           %[[VAL_1:.*]] = p4hir.cast(%[[VAL_0]] : !i5i) : !i5i
// CHECK:           %[[VAL_2:.*]] = p4hir.variable ["lhs", init] : <!i5i>
// CHECK:           p4hir.assign %[[VAL_1]], %[[VAL_2]] : <!i5i>
// CHECK:           %[[VAL_3:.*]] = p4hir.const #[[$ATTR_3]]
// CHECK:           %[[VAL_4:.*]] = p4hir.cast(%[[VAL_3]] : !b5i) : !b5i
// CHECK:           %[[VAL_5:.*]] = p4hir.variable ["rhs", init] : <!b5i>
// CHECK:           p4hir.assign %[[VAL_4]], %[[VAL_5]] : <!b5i>
// CHECK:           %[[VAL_6:.*]] = p4hir.read %[[VAL_2]] : <!i5i>
// CHECK:           %[[VAL_7:.*]] = p4hir.read %[[VAL_5]] : <!b5i>
// CHECK:           %[[VAL_8:.*]] = p4hir.concat(%[[VAL_6]] : !i5i, %[[VAL_7]] : !b5i) : !i10i
// CHECK:           %[[VAL_9:.*]] = p4hir.variable ["result", init] : <!i10i>
// CHECK:           p4hir.assign %[[VAL_8]], %[[VAL_9]] : <!i10i>
// CHECK:           p4hir.return
// CHECK:         }

// CHECK-LABEL:   p4hir.func action @concat_int5_and_bit10() {
// CHECK:           %[[VAL_0:.*]] = p4hir.const #[[$ATTR_1]]
// CHECK:           %[[VAL_1:.*]] = p4hir.cast(%[[VAL_0]] : !i5i) : !i5i
// CHECK:           %[[VAL_2:.*]] = p4hir.variable ["lhs", init] : <!i5i>
// CHECK:           p4hir.assign %[[VAL_1]], %[[VAL_2]] : <!i5i>
// CHECK:           %[[VAL_3:.*]] = p4hir.const #[[$ATTR_2]]
// CHECK:           %[[VAL_4:.*]] = p4hir.cast(%[[VAL_3]] : !b10i) : !b10i
// CHECK:           %[[VAL_5:.*]] = p4hir.variable ["rhs", init] : <!b10i>
// CHECK:           p4hir.assign %[[VAL_4]], %[[VAL_5]] : <!b10i>
// CHECK:           %[[VAL_6:.*]] = p4hir.read %[[VAL_2]] : <!i5i>
// CHECK:           %[[VAL_7:.*]] = p4hir.read %[[VAL_5]] : <!b10i>
// CHECK:           %[[VAL_8:.*]] = p4hir.concat(%[[VAL_6]] : !i5i, %[[VAL_7]] : !b10i) : !i15i
// CHECK:           %[[VAL_9:.*]] = p4hir.variable ["result", init] : <!i15i>
// CHECK:           p4hir.assign %[[VAL_8]], %[[VAL_9]] : <!i15i>
// CHECK:           p4hir.return
// CHECK:         }
