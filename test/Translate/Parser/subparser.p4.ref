struct empty {
}
parser subparser(in empty e) {
    state start {
        transition accept;
    }
}
parser subparser2(in empty e)(bool ctorArg) {
    state start {
        transition accept;
    }
}
parser subparser3(inout int<10> s, out bool matched) {
    state start {
        transition accept;
    }
}
parser p(in empty e, in int<10> sinit) {
    int<10> s = sinit;

    subparser() sp;
    subparser2(false) sp2;
    subparser3() sp3;
    state start {
        s = (int<10>)(10s1);
        sp().apply(e);
        transition next;
    }
    state next {
        bool matched = false;

        s = (int<10>)(10s2);
        sp2(false).apply(e);
        {
            int<10> s_inout_arg;
            s_inout_arg = s;
            bool matched_out_arg;
            sp3().apply(s_inout_arg, matched_out_arg);
            s = s_inout_arg;
            matched = matched_out_arg;
        }
        transition accept;
    }
    state drop {
        transition reject;
    }
}
